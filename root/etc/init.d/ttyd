#!/bin/sh /etc/rc.common
#

START=30
USE_PROCD=1

EXTRA_COMMANDS="status"
EXTRA_HELP="status	Print runtime information"

ttyd_init="/etc/init.d/ttyd"
ttyd="/usr/bin/ttyd"
ttyd_params=""
ttyd_run="/bin/sh"

start_service()
{
    config_cb() {
        local type="$1"
        local name="$2"
        if [ "$type" = "server" ]; then
            option_cb() {

                local option="$( echo -e "$1" | tr  '_' '-'  )"
                local value="$2"
                echo "${option//_/-} $value"
                case "$option" in
                    credential|username|password) ;;
                    shell) ttyd_run=${value} ;;
                    once|ssl|readonly|check-origin)   ttyd_params="${ttyd_params} --${option//_/-}"  ;;
                    *)   ttyd_params="${ttyd_params} --${option//_/-} $value" ;;
                esac
            }
        else
            option_cb() { return; }
        fi
    }

    config_load ttyd
    config_get port default port 7681
    config_get_bool use_credential default credential 0
    config_get username default username
    config_get password default password


    if [ "$use_credential" = 1 ]; then
        ttyd_params="${ttyd_params} --credential ${username}:${password}"
    fi

    procd_open_instance "ttyd"
    procd_set_param command ${ttyd} ${ttyd_params} ${ttyd_run} --login
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param pidfile /var/run/ttyd.pid
    procd_close_instance
}

reload_service()
{
    rc_procd start_service reload
}


restart()
{
    rc_procd start_service restart
}

status()
{
    if [ `pgrep ttyd` ]; then
        echo 1
    else
        echo 0
    fi
}
